#pragma once

#include <filesystem>
#include <list>
#include <memory>
#include <string>

#include <bungeegum/glue/reload.hpp>
#include <bungeegum/glue/simd.hpp>

namespace bungeegum {
namespace detail {

    struct backend_manager {
        uint2 viewport_size = zero<float2>; // we global this so we can

#if BUNGEEGUM_USE_HOTRELOAD
        std::unique_ptr<reloader> reload_manager = nullptr;
        std::list<std::string> reload_defines = {};
        std::list<std::filesystem::path> reload_include_directories = {};
        std::list<std::filesystem::path> reload_libraries = {};
        std::list<std::filesystem::path> reload_source_directories = {};
        std::list<std::filesystem::path> reload_force_compiled_source_files = {};
#endif
    };

    // inline backend_manager global_backend_manager = {};
}
}