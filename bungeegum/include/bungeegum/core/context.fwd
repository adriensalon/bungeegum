#pragma once

#include <any>
#include <chrono>
#include <vector>

#include <bungeegum/advanced/interact.hpp>

struct ImDrawList;

namespace bungeegum {
namespace detail {

    struct context {
        inline static std::vector<window_resized_interaction_data> window_resized_interactions = {};
        inline static std::vector<mouse_moved_interaction_data> mouse_moved_interactions = {};
        inline static std::vector<mouse_down_interaction_data> mouse_down_interactions = {};
        inline static std::vector<mouse_up_interaction_data> mouse_up_interactions = {};
        inline static std::vector<mouse_pressed_interaction_data> mouse_pressed_interactions = {};

        static void interact();

        static void resolve(const std::chrono::milliseconds& delta_time);

        static void draw(ImDrawList* imgui_drawlist, const bool heads_start);
    };

    void process_input(const std::any& input);

    bool tick(const std::chrono::milliseconds& delta_time);

    void draw(const bool heads_start);
}
}
