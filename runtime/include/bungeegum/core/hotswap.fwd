#pragma once

#include <filesystem>
#include <memory>
#include <string>
#include <vector>

#include <bungeegum/core/math.hpp>
#include <bungeegum/core/widget.fwd>
#include <bungeegum/glue/reload.fwd>

namespace bungeegum {
namespace detail {

    struct hotswap_manager {
        hotswap_manager() = default;
        hotswap_manager(const hotswap_manager& other) = delete;
        hotswap_manager& operator=(const hotswap_manager& other) = delete;
        hotswap_manager(hotswap_manager&& other) = delete;
        hotswap_manager& operator=(hotswap_manager&& other) = delete;

#if BUNGEEGUM_USE_HOTSWAP
        void setup_if_required();

        void save_widgets(const std::filesystem::path& archive_path, const widget_update_data& root_updatable);

        void load_widgets(const std::filesystem::path& archive_path, const widget_update_data& root_updatable);

        std::optional<std::string> inspect_reloadable_widget(const widget_update_data& update_data);

        void update_reloadable_widget(widget_update_data& update_data, const std::string& serialized);

        std::unique_ptr<reloader> reload_manager = nullptr;
        std::wstring reload_initialization_message = {}; // Degager ptetre direct submit dans standalone.cpp
#endif
    };
}
}