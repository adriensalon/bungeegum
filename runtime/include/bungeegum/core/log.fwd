#pragma once

#include <bungeegum/glue/backtrace.hpp>

#include <unordered_map>

namespace bungeegum { 
namespace detail {


    struct log_data {
        log_data() = delete;
        log_data(const log_data& other) = delete;
        log_data& operator=(const log_data& other) = delete;
        log_data(log_data&& other) = default;
        log_data& operator=(log_data&& other) = default;

        log_data(backtraced_exception&& caught_exception);

        backtraced_exception exception;
        std::size_t count = 0u;
    };

    using log_data_map = std::unordered_map<std::string, log_data>;

    void protect_dispatch(const std::function<void()>& try_callback);

}
}