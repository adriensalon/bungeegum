#pragma once

#include <vector>

#include <bungeegum/glue/window.fwd>
#include <bungeegum/core/interact.hpp>
#include <bungeegum/core/widget.fwd>
#include <bungeegum/core/overlay.fwd>

struct ImDrawList;

namespace bungeegum {
namespace detail {

    struct process_manager {
        process_manager() = default;
        process_manager(const process_manager& other) = delete;
        process_manager& operator=(const process_manager& other) = delete;
        process_manager(process_manager&& other) = delete;
        process_manager& operator=(process_manager&& other) = delete;

        bool update(const float2 viewport_size, const std::chrono::milliseconds& delta_time, widget_update_data& root_updatable); // + frame_events etc

        void render();

    private:
        void _process_interact();
        void _process_resolve(const float2 viewport_size, widget_update_data& root_updatable);
        void _process_draw(ImDrawList* imgui_drawlist);
    };
}
}
