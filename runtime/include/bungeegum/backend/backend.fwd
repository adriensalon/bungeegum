#pragma once

#include <filesystem>
#include <list>
#include <map>
#include <memory>
#include <string>

#include <bungeegum/glue/reload.hpp>
#include <bungeegum/glue/simd.hpp>

namespace bungeegum {
namespace detail {

    struct backend_manager {
        backend_manager() = default;
        backend_manager(const backend_manager& other) = delete;
        backend_manager& operator=(const backend_manager& other) = delete;
        backend_manager(backend_manager&& other) = delete;
        backend_manager& operator=(backend_manager&& other) = delete;

#if BUNGEEGUM_USE_HOTSWAP
        void setup_if_required();

        std::unique_ptr<reloader> reload_manager = nullptr;
        std::wstring reload_initialization_message = {};
#endif

        uint2 viewport_size = zero<float2>;
    };
}
}